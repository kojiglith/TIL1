모듈 - 코드의 묶음/ 특정한 기능을 하는 코드가 작성된 파일(생산성 향상)
math 와 같은 내장 모듈은 import를 선언하고 사용 가능

docs.python 에 들어가서 파이썬 내장함수 확인 가능

from 절 이용해서 모듈 가져오기(특정 함수 사용 시)
ex)  from math import sqrt 
print(sqrt(4))

'.(dot)' 연산자 
' 점의 왼쪽 객체에서 점의 오른쪽 이름을 찾아라' 라는 의미

서로 다른 모듈이 같은 이름의 함수를 제공할 경우 문제가 발생/ 마지막에 import된 이름으로 대체됨
*(전체를 의미) / 그래서 모듈 내 모든 요소를 한번에 import하는 * 표기는 권장하지 않음
-> as 키워드를 사용하여 별칭(alias)을 부여

from math import sqrt
from my_math import sqrt as my_sqrt

파이썬 표준 라이브러리 - 모듈보다 큰 개념 
패키지 - 연관된 모듈들을 하나의 디렉토리에 모아 놓은 것

import 모듈이름(~~~.py)
print(모듈이름.함수이름())

from 패키지이름1,패키지이름2 import 모듈이름
print(모듈이름.함수이름())

pip - 외부 패키지들을 설치하도록 도와주는 파이썬의 패키지 관리 ㅣ시스템
***********************매우중요.*****************************



print install ~~~ (패키치 설치) / 삭제는 uninstall

pip install request ( request는 이 라이브러리(외부 라이브러리)는 반드시 사용)

impqort request


패키지 사용 목적
모듈들의 이름공간을 구분하여 충돌을 방ㅈ
효과적 관리!

%제어문%

for 변수 in 반복 가능한 객체:
  코드 블록

반복가능한(iterable) - 시퀀스 객체뿐만 아니라 dict, set등도 포함!

이중 for문을 다루는게 IM시험 관건

break - 반복을 즉시 중지
continue - 다음 반복으로 건너뜀


반복문을 통해서 list 작성, map 함수 이용해서 작성
리스트.append(값)

최댓값, 최솟값 구하는 함수 만들기

다 구하고 인덱스도 구하기(이뉴머레이트??)







































































































