sqeuence type 
- list, tuple, range

text sequence type
- str

none-sequence type
- set, dict
                              우선순위
/ 나눗셈
// 정수 나눗셈 (몫)
% 나머지
** 지수 (거듭제곱) 

값드을 구분하고, 어떻게 다뤄야 하는 지알수있음
각 데이터 타입값들도 각자에게 적합한 도구를 가짐
타입을 명시적으로 지정하면 코드를 읽는 사람이 변수의 의도를 더 쉽게

파일, 문서, 확장자, 이론 이상함... .git? git init? 어떡하는거임!

순서(sequence)
- 값들이 순서대로 저장  (정렬x)

슬라이싱
- 인덱스 범위를 조절해 부분적인 값을 추출할 수 있음 

길이
- len() 함수를 사용하여 저장된 값의 개수(길이)를 구할 수 있음                  -> 슬라이싱, 길이, 반복이 가능한건 순서가 있기 때문임!

반복(Iteration)
- 반복문을 사용하여 저장된 값들을 반복적으로 처리할 수 있음



str / 문자열
- 문자들의 순서가 있는 변경 불가능한 시퀀스 자료형


f-string

print(f' dasda {bn}

list - 여러 개의 값을 순서대로 저장/ 변경 가능/ 시퀀스 자료형 

튜플은 개발자가 직접 활용하진 않고(불변의 특성/ 특정한 위치에 값을 정확하게 보장)
- 내부 동작과 안전한 데이터 전달에 사용 
- 다중 할당, 값 교환, 그룹화, 함수 다중 반환 값

dictionary
- 순서가 존재하지 않음 

set
- 순서와 중복이 없는 변경가능한 자료형

Collection
- 여러 개의 항목 또는 요소를 담는 자료구조 (str, list, tuple, set, dict)


is는 객체의 식별성을 비교하므로 숫자나 문자열 같은 값 자체를 비교하려는 상황에서 적잘치 않음
is연산자를 이용하면 코드 상에서 의도치 않게 flase가 나오거나 파이썬 버전에 따라 다름
<is 사용할 때> - "같은 ㅈ소에 있는가?"라는 질문에 답해야 할 때사용
None을 비교할 떄 == 대신 is를 사용하라고 권장 

==비교 연산자
값(데이터_가 같은지를 비교, 동등성(equality)
1 == true의 경우 파이썬이 true의 값은 1로 정함

객체비교에는 is를 사용 

논리 연산에서 두번째 피연산자를 신경쓰지 않고 바로 계산 - 단축연산
비교 연산자 

